{"ast":null,"code":"var _jsxFileName = \"/Users/girik/Desktop/WeatherApp/weatherapp/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport Search from './components/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [currentWeatherFetch, setCurrentWeather] = useState(null);\n  const [forecastFetch, setForecast] = useState(null);\n  const handleOnSearchChange = searchData => {\n    const [lat, lon] = searchData.value.split(\" \");\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    Promise.all([currentWeatherFetch, forecastFetch]).then(async response => {\n      const weatherResponse = await response[0].json();\n      const forecastResponse = await response[1].json();\n      setCurrentWeather({\n        city: searchData.label,\n        ...weatherResponse\n      });\n      setForecast({\n        city: searchData.label,\n        ...forecastResponse\n      });\n    }).catch(err => console.log(err));\n  };\n  console.log(CurrentWeather);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      onSearchChange: handleOnSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YaD8mDzBx+IhbySdEHN/drZcs7E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Search","CurrentWeather","WEATHER_API_KEY","WEATHER_API_URL","useState","jsxDEV","_jsxDEV","App","_s","currentWeatherFetch","setCurrentWeather","forecastFetch","setForecast","handleOnSearchChange","searchData","lat","lon","value","split","fetch","Promise","all","then","response","weatherResponse","json","forecastResponse","city","label","catch","err","console","log","className","children","onSearchChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/girik/Desktop/WeatherApp/weatherapp/src/App.js"],"sourcesContent":["import './App.css';\nimport Search from './components/search';\nimport CurrentWeather from './components/current-weather/current-weather';\nimport { WEATHER_API_KEY, WEATHER_API_URL } from './api';\nimport { useState } from 'react';\n\nfunction App() {\n  const [currentWeatherFetch, setCurrentWeather] = useState(null);\n  const [forecastFetch, setForecast] = useState(null);\n\n\n  const handleOnSearchChange = (searchData) => {\n    const [lat, lon] = searchData.value.split(\" \");\n\n    const currentWeatherFetch = fetch(`${WEATHER_API_URL}/weather?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n    const forecastFetch = fetch(`${WEATHER_API_URL}/forecast?lat=${lat}&lon=${lon}&appid=${WEATHER_API_KEY}`);\n\n    Promise.all([currentWeatherFetch, forecastFetch])\n      .then(async (response) => {\n        const weatherResponse = await response[0].json();\n        const forecastResponse = await response[1].json();\n\n        setCurrentWeather({ city: searchData.label, ...weatherResponse });\n        setForecast({ city: searchData.label, ...forecastResponse });\n      })\n      .catch((err) => console.log(err));\n\n  }\n\n  console.log(CurrentWeather)\n\n  return (\n    <div className=\"container\">\n      <Search onSearchChange={handleOnSearchChange} />\n      <CurrentWeather />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,cAAc,MAAM,8CAA8C;AACzE,SAASC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACxD,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,mBAAmB,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC/D,MAAM,CAACO,aAAa,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAGnD,MAAMS,oBAAoB,GAAIC,UAAU,IAAK;IAC3C,MAAM,CAACC,GAAG,EAAEC,GAAG,CAAC,GAAGF,UAAU,CAACG,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC;IAE9C,MAAMT,mBAAmB,GAAGU,KAAK,CAAE,GAAEhB,eAAgB,gBAAeY,GAAI,QAAOC,GAAI,UAASd,eAAgB,EAAC,CAAC;IAC9G,MAAMS,aAAa,GAAGQ,KAAK,CAAE,GAAEhB,eAAgB,iBAAgBY,GAAI,QAAOC,GAAI,UAASd,eAAgB,EAAC,CAAC;IAEzGkB,OAAO,CAACC,GAAG,CAAC,CAACZ,mBAAmB,EAAEE,aAAa,CAAC,CAAC,CAC9CW,IAAI,CAAC,MAAOC,QAAQ,IAAK;MACxB,MAAMC,eAAe,GAAG,MAAMD,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAChD,MAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAAC,CAAC,CAAC,CAACE,IAAI,CAAC,CAAC;MAEjDf,iBAAiB,CAAC;QAAEiB,IAAI,EAAEb,UAAU,CAACc,KAAK;QAAE,GAAGJ;MAAgB,CAAC,CAAC;MACjEZ,WAAW,CAAC;QAAEe,IAAI,EAAEb,UAAU,CAACc,KAAK;QAAE,GAAGF;MAAiB,CAAC,CAAC;IAC9D,CAAC,CAAC,CACDG,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EAErC,CAAC;EAEDC,OAAO,CAACC,GAAG,CAAC/B,cAAc,CAAC;EAE3B,oBACEK,OAAA;IAAK2B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB5B,OAAA,CAACN,MAAM;MAACmC,cAAc,EAAEtB;IAAqB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChDjC,OAAA,CAACL,cAAc;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAAC/B,EAAA,CA/BQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}